#include "stdafx.h"
#include "Model.h"
Model::Model() {
// +++ NODES +++
this->nodes.push_back(Node(1, "", 0, 0, 0));
this->nodes.push_back(Node(2, "", 0, 0, 1.7));
this->nodes.push_back(Node(3, "", 0, 0, 2));
this->nodes.push_back(Node(4, "", 0, 0, 6));
this->nodes.push_back(Node(5, "", 0, 0, 10));
this->nodes.push_back(Node(6, "", 0, 0, 15));
this->nodes.push_back(Node(7, "", 0, 0, 23));
this->nodes.push_back(Node(8, "", 0, 2, 6));
this->nodes.push_back(Node(9, "", 0, 2, 10));
this->nodes.push_back(Node(10, "", 0, 2, 15));
this->nodes.push_back(Node(11, "", 0, 2, 23));
this->nodes.push_back(Node(12, "", 0, 3, 6));
this->nodes.push_back(Node(13, "", 0, 3, 10));
this->nodes.push_back(Node(14, "", 0, 4, 6));
this->nodes.push_back(Node(15, "", 0, 4, 10));
this->nodes.push_back(Node(16, "", 0, 4, 15));
this->nodes.push_back(Node(17, "", 0, 4, 23));
this->nodes.push_back(Node(18, "", 0, 6, 0));
this->nodes.push_back(Node(19, "", 0, 6, 1.7));
this->nodes.push_back(Node(20, "", 0, 6, 2));
this->nodes.push_back(Node(21, "", 0, 6, 6));
this->nodes.push_back(Node(22, "", 0, 6, 10));
this->nodes.push_back(Node(23, "", 0, 6, 15));
this->nodes.push_back(Node(24, "", 0, 6, 23));
this->nodes.push_back(Node(25, "", 2, 0, 6));
this->nodes.push_back(Node(26, "", 2, 0, 10));
this->nodes.push_back(Node(27, "", 2, 0, 15));
this->nodes.push_back(Node(28, "", 2, 0, 23));
this->nodes.push_back(Node(29, "", 2, 2, 6));
this->nodes.push_back(Node(30, "", 2, 2, 10));
this->nodes.push_back(Node(31, "", 2, 2, 15));
this->nodes.push_back(Node(32, "", 2, 2, 23));
this->nodes.push_back(Node(33, "", 2, 2.6, 15));
this->nodes.push_back(Node(34, "", 2, 2.6, 23));
this->nodes.push_back(Node(35, "", 2, 3, 6));
this->nodes.push_back(Node(36, "", 2, 3, 10));
this->nodes.push_back(Node(37, "", 2, 3.4, 15));
this->nodes.push_back(Node(38, "", 2, 3.4, 23));
this->nodes.push_back(Node(39, "", 2, 4, 6));
this->nodes.push_back(Node(40, "", 2, 4, 10));
this->nodes.push_back(Node(41, "", 2, 4, 15));
this->nodes.push_back(Node(42, "", 2, 4, 23));
this->nodes.push_back(Node(43, "", 2, 6, 6));
this->nodes.push_back(Node(44, "", 2, 6, 10));
this->nodes.push_back(Node(45, "", 2, 6, 15));
this->nodes.push_back(Node(46, "", 2, 6, 23));
this->nodes.push_back(Node(47, "", 2.6, 2, 15));
this->nodes.push_back(Node(48, "", 2.6, 2, 23));
this->nodes.push_back(Node(49, "", 2.6, 4, 15));
this->nodes.push_back(Node(50, "", 2.6, 4, 23));
this->nodes.push_back(Node(51, "", 3.4, 2, 15));
this->nodes.push_back(Node(52, "", 3.4, 2, 23));
this->nodes.push_back(Node(53, "", 3.4, 4, 15));
this->nodes.push_back(Node(54, "", 3.4, 4, 23));
this->nodes.push_back(Node(55, "", 4, 0, 6));
this->nodes.push_back(Node(56, "", 4, 0, 10));
this->nodes.push_back(Node(57, "", 4, 0, 15));
this->nodes.push_back(Node(58, "", 4, 0, 23));
this->nodes.push_back(Node(59, "", 4, 2, 6));
this->nodes.push_back(Node(60, "", 4, 2, 10));
this->nodes.push_back(Node(61, "", 4, 2, 15));
this->nodes.push_back(Node(62, "", 4, 2, 23));
this->nodes.push_back(Node(63, "", 4, 2.6, 15));
this->nodes.push_back(Node(64, "", 4, 2.6, 23));
this->nodes.push_back(Node(65, "", 4, 3, 6));
this->nodes.push_back(Node(66, "", 4, 3, 10));
this->nodes.push_back(Node(67, "", 4, 3.4, 15));
this->nodes.push_back(Node(68, "", 4, 3.4, 23));
this->nodes.push_back(Node(69, "", 4, 4, 6));
this->nodes.push_back(Node(70, "", 4, 4, 10));
this->nodes.push_back(Node(71, "", 4, 4, 15));
this->nodes.push_back(Node(72, "", 4, 4, 23));
this->nodes.push_back(Node(73, "", 4, 6, 6));
this->nodes.push_back(Node(74, "", 4, 6, 10));
this->nodes.push_back(Node(75, "", 4, 6, 15));
this->nodes.push_back(Node(76, "", 4, 6, 23));
this->nodes.push_back(Node(77, "", 6, 0, 0));
this->nodes.push_back(Node(78, "", 6, 0, 1.7));
this->nodes.push_back(Node(79, "", 6, 0, 2));
this->nodes.push_back(Node(80, "", 6, 0, 6));
this->nodes.push_back(Node(81, "", 6, 0, 10));
this->nodes.push_back(Node(82, "", 6, 0, 15));
this->nodes.push_back(Node(83, "", 6, 0, 23));
this->nodes.push_back(Node(84, "", 6, 2, 6));
this->nodes.push_back(Node(85, "", 6, 2, 10));
this->nodes.push_back(Node(86, "", 6, 2, 15));
this->nodes.push_back(Node(87, "", 6, 2, 23));
this->nodes.push_back(Node(88, "", 6, 3, 6));
this->nodes.push_back(Node(89, "", 6, 3, 10));
this->nodes.push_back(Node(90, "", 6, 4, 6));
this->nodes.push_back(Node(91, "", 6, 4, 10));
this->nodes.push_back(Node(92, "", 6, 4, 15));
this->nodes.push_back(Node(93, "", 6, 4, 23));
this->nodes.push_back(Node(94, "", 6, 6, 0));
this->nodes.push_back(Node(95, "", 6, 6, 1.7));
this->nodes.push_back(Node(96, "", 6, 6, 2));
this->nodes.push_back(Node(97, "", 6, 6, 6));
this->nodes.push_back(Node(98, "", 6, 6, 10));
this->nodes.push_back(Node(99, "", 6, 6, 15));
this->nodes.push_back(Node(100, "", 6, 6, 23));
this->nodes.push_back(Node(101, "", 9, 0, 6));
this->nodes.push_back(Node(102, "", 9, 0, 10));
this->nodes.push_back(Node(103, "", 9, 3, 6));
this->nodes.push_back(Node(104, "", 9, 3, 10));
this->nodes.push_back(Node(105, "", 9, 6, 6));
this->nodes.push_back(Node(106, "", 9, 6, 10));
this->nodes.push_back(Node(107, "", 12, 0, 6));
this->nodes.push_back(Node(108, "", 12, 0, 10));
this->nodes.push_back(Node(109, "", 12, 3, 6));
this->nodes.push_back(Node(110, "", 12, 3, 10));
this->nodes.push_back(Node(111, "", 12, 6, 6));
this->nodes.push_back(Node(112, "", 12, 6, 10));
this->nodes.push_back(Node(113, "", 15, 0, 0));
this->nodes.push_back(Node(114, "", 15, 0, 1.7));
this->nodes.push_back(Node(115, "", 15, 0, 2));
this->nodes.push_back(Node(116, "", 15, 0, 6));
this->nodes.push_back(Node(117, "", 15, 0, 10));
this->nodes.push_back(Node(118, "", 15, 2, 6));
this->nodes.push_back(Node(119, "", 15, 3, 6));
this->nodes.push_back(Node(120, "", 15, 3, 10));
this->nodes.push_back(Node(121, "", 15, 4, 6));
this->nodes.push_back(Node(122, "", 15, 6, 0));
this->nodes.push_back(Node(123, "", 15, 6, 1.7));
this->nodes.push_back(Node(124, "", 15, 6, 2));
this->nodes.push_back(Node(125, "", 15, 6, 6));
this->nodes.push_back(Node(126, "", 15, 6, 10));
this->nodes.push_back(Node(127, "", 18, 0, 6));
this->nodes.push_back(Node(128, "", 18, 0, 10));
this->nodes.push_back(Node(129, "", 18, 3, 6));
this->nodes.push_back(Node(130, "", 18, 3, 10));
this->nodes.push_back(Node(131, "", 18, 6, 6));
this->nodes.push_back(Node(132, "", 18, 6, 10));
this->nodes.push_back(Node(133, "", 21, 0, 6));
this->nodes.push_back(Node(134, "", 21, 0, 10));
this->nodes.push_back(Node(135, "", 21, 3, 6));
this->nodes.push_back(Node(136, "", 21, 3, 10));
this->nodes.push_back(Node(137, "", 21, 6, 6));
this->nodes.push_back(Node(138, "", 21, 6, 10));
this->nodes.push_back(Node(139, "", 24, 0, 0));
this->nodes.push_back(Node(140, "", 24, 0, 1.7));
this->nodes.push_back(Node(141, "", 24, 0, 2));
this->nodes.push_back(Node(142, "", 24, 0, 6));
this->nodes.push_back(Node(143, "", 24, 0, 10));
this->nodes.push_back(Node(144, "", 24, 2, 6));
this->nodes.push_back(Node(145, "", 24, 3, 6));
this->nodes.push_back(Node(146, "", 24, 3, 10));
this->nodes.push_back(Node(147, "", 24, 4, 6));
this->nodes.push_back(Node(148, "", 24, 6, 0));
this->nodes.push_back(Node(149, "", 24, 6, 1.7));
this->nodes.push_back(Node(150, "", 24, 6, 2));
this->nodes.push_back(Node(151, "", 24, 6, 6));
this->nodes.push_back(Node(152, "", 24, 6, 10));
// +++ MEMBERS +++
this->members.push_back(Member(1, "GL+6000 B01", 4, 8, 56, 0, 0, "STZ  ASCHM d1 16 TMP 1.2e-005"));
this->members.push_back(Member(2, "GL+6000 B02", 25, 29, 56, 0, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(3, "GL+6000 B03", 55, 59, 56, 0, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(4, "GL+6000 B04", 80, 84, 56, 0, 0, "STZ  ASCHM d1 16 TMP 1.2e-005"));
this->members.push_back(Member(5, "GL+6000 B05", 101, 103, 56, 0, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(6, "GL+6000 B06", 107, 109, 56, 0, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(7, "GL+6000 B07", 116, 118, 56, 0, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(8, "GL+6000 B08", 127, 129, 56, 0, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(9, "GL+6000 B09", 133, 135, 56, 0, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(10, "GL+6000 B10", 142, 144, 56, 0, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(11, "GL+6000 B11", 4, 25, 56, 0, 0, "STZ  ASCHM d1 16 TMP 1.2e-005"));
this->members.push_back(Member(12, "GL+6000 B12", 29, 59, 56, 48, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(13, "GL+6000 B13", 39, 69, 56, 48, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(14, "GL+6000 B14", 21, 43, 56, 0, 0, "STZ  ASCHM d1 16 TMP 1.2e-005"));
this->members.push_back(Member(15, "GL+6000 B15", 80, 101, 56, 0, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(16, "GL+6000 B16", 97, 105, 56, 0, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(17, "GL+6000 B17", 116, 127, 56, 0, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(18, "GL+6000 B18", 125, 131, 56, 0, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(19, "GL+6000 BR01", 4, 35, 56, 48, 0, "STZ RUSSIAN diam 390 TMP 1.2e-005"));
this->members.push_back(Member(20, "GL+6000 BR02", 21, 35, 56, 48, 0, "STZ RUSSIAN diam 390 TMP 1.2e-005"));
this->members.push_back(Member(21, "GL+6000 BR03", 80, 65, 56, 48, 0, "STZ RUSSIAN diam 390 TMP 1.2e-005"));
this->members.push_back(Member(22, "GL+6000 BR04", 97, 65, 56, 48, 0, "STZ RUSSIAN diam 390 TMP 1.2e-005"));
this->members.push_back(Member(23, "GL+6000 BR05", 80, 103, 56, 48, 0, "STZ RUSSIAN diam 390 TMP 1.2e-005"));
this->members.push_back(Member(24, "GL+6000 BR06", 97, 103, 56, 48, 0, "STZ RUSSIAN diam 390 TMP 1.2e-005"));
this->members.push_back(Member(25, "GL+6000 BR07", 116, 109, 56, 48, 0, "STZ RUSSIAN diam 390 TMP 1.2e-005"));
this->members.push_back(Member(26, "GL+6000 BR08", 125, 109, 56, 48, 0, "STZ RUSSIAN diam 390 TMP 1.2e-005"));
this->members.push_back(Member(27, "GL+6000 BR09", 116, 129, 56, 48, 0, "STZ RUSSIAN diam 390 TMP 1.2e-005"));
this->members.push_back(Member(28, "GL+6000 BR10", 125, 129, 56, 48, 0, "STZ RUSSIAN diam 390 TMP 1.2e-005"));
this->members.push_back(Member(29, "GL+6000 BR11", 142, 135, 56, 48, 0, "STZ RUSSIAN diam 390 TMP 1.2e-005"));
this->members.push_back(Member(30, "GL+6000 BR12", 151, 135, 56, 48, 0, "STZ RUSSIAN diam 390 TMP 1.2e-005"));
this->members.push_back(Member(31, "GL+6000 RM01", 12, 35, 56, 48, 0, "STZ RUSSIAN pu_uklon 4 TMP 1.2e-005"));
this->members.push_back(Member(32, "GL+6000 RM02", 65, 88, 56, 48, 0, "STZ RUSSIAN pu_uklon 4 TMP 1.2e-005"));
this->members.push_back(Member(33, "GL+6000 RM03", 88, 103, 56, 48, 0, "STZ RUSSIAN pu_uklon 4 TMP 1.2e-005"));
this->members.push_back(Member(34, "GL+6000 RM04", 103, 109, 56, 48, 0, "STZ RUSSIAN pu_uklon 4 TMP 1.2e-005"));
this->members.push_back(Member(35, "GL+6000 RM05", 109, 119, 56, 48, 0, "STZ RUSSIAN pu_uklon 4 TMP 1.2e-005"));
this->members.push_back(Member(36, "GL+6000 RM06", 119, 129, 56, 48, 0, "STZ RUSSIAN pu_uklon 4 TMP 1.2e-005"));
this->members.push_back(Member(37, "GL+6000 RM07", 129, 135, 56, 48, 0, "STZ RUSSIAN pu_uklon 4 TMP 1.2e-005"));
this->members.push_back(Member(38, "GL+6000 RM08", 135, 145, 56, 48, 0, "STZ RUSSIAN pu_uklon 4 TMP 1.2e-005"));
this->members.push_back(Member(39, "GL+10000 B01", 5, 9, 56, 0, 0, "STZ  ASCHM d1 16 TMP 1.2e-005"));
this->members.push_back(Member(40, "GL+10000 B02", 26, 30, 56, 0, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(41, "GL+10000 B03", 56, 60, 56, 0, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(42, "GL+10000 B04", 81, 85, 56, 0, 0, "STZ  ASCHM d1 16 TMP 1.2e-005"));
this->members.push_back(Member(43, "GL+10000 B05", 102, 104, 56, 0, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(44, "GL+10000 B06", 108, 110, 56, 0, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(45, "GL+10000 B07", 117, 120, 0, 0, 0, "STZ  ASCHM d1 16 TMP 1.2e-005"));
this->members.push_back(Member(46, "GL+10000 B08", 128, 130, 56, 0, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(47, "GL+10000 B09", 134, 136, 56, 0, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(48, "GL+10000 B10", 143, 146, 0, 0, 0, "STZ  ASCHM d1 16 TMP 1.2e-005"));
this->members.push_back(Member(49, "GL+10000 B11", 5, 26, 56, 0, 0, "STZ  ASCHM d1 16 TMP 1.2e-005"));
this->members.push_back(Member(50, "GL+10000 B12", 30, 60, 56, 48, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(51, "GL+10000 B13", 40, 70, 56, 48, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(52, "GL+10000 B14", 22, 44, 56, 0, 0, "STZ  ASCHM d1 16 TMP 1.2e-005"));
this->members.push_back(Member(53, "GL+10000 B15", 81, 102, 56, 0, 0, "STZ  ASCHM d1 18 TMP 1.2e-005"));
this->members.push_back(Member(54, "GL+10000 B16", 98, 106, 56, 0, 0, "STZ  ASCHM d1 18 TMP 1.2e-005"));
this->members.push_back(Member(55, "GL+10000 B17", 117, 128, 56, 0, 0, "STZ  ASCHM d1 18 TMP 1.2e-005"));
this->members.push_back(Member(56, "GL+10000 B18", 126, 132, 56, 0, 0, "STZ  ASCHM d1 18 TMP 1.2e-005"));
this->members.push_back(Member(57, "GL+10000 BR01", 5, 36, 56, 48, 0, "STZ RUSSIAN diam 390 TMP 1.2e-005"));
this->members.push_back(Member(58, "GL+10000 BR02", 22, 36, 56, 48, 0, "STZ RUSSIAN diam 390 TMP 1.2e-005"));
this->members.push_back(Member(59, "GL+10000 BR03", 81, 66, 56, 48, 0, "STZ RUSSIAN diam 390 TMP 1.2e-005"));
this->members.push_back(Member(60, "GL+10000 BR04", 98, 66, 56, 48, 0, "STZ RUSSIAN diam 390 TMP 1.2e-005"));
this->members.push_back(Member(61, "GL+10000 BR05", 81, 104, 56, 48, 0, "STZ RUSSIAN diam 390 TMP 1.2e-005"));
this->members.push_back(Member(62, "GL+10000 BR06", 98, 104, 56, 48, 0, "STZ RUSSIAN diam 390 TMP 1.2e-005"));
this->members.push_back(Member(63, "GL+10000 BR07", 117, 110, 56, 48, 0, "STZ RUSSIAN diam 390 TMP 1.2e-005"));
this->members.push_back(Member(64, "GL+10000 BR08", 126, 110, 56, 48, 0, "STZ RUSSIAN diam 390 TMP 1.2e-005"));
this->members.push_back(Member(65, "GL+10000 BR09", 117, 130, 56, 48, 0, "STZ RUSSIAN diam 390 TMP 1.2e-005"));
this->members.push_back(Member(66, "GL+10000 BR10", 126, 130, 56, 48, 0, "STZ RUSSIAN diam 390 TMP 1.2e-005"));
this->members.push_back(Member(67, "GL+10000 BR11", 143, 136, 56, 48, 0, "STZ RUSSIAN diam 390 TMP 1.2e-005"));
this->members.push_back(Member(68, "GL+10000 BR12", 152, 136, 56, 48, 0, "STZ RUSSIAN diam 390 TMP 1.2e-005"));
this->members.push_back(Member(69, "GL+10000 RM01", 13, 36, 56, 48, 0, "STZ RUSSIAN pu_uklon 4 TMP 1.2e-005"));
this->members.push_back(Member(70, "GL+10000 RM02", 66, 89, 56, 48, 0, "STZ RUSSIAN pu_uklon 4 TMP 1.2e-005"));
this->members.push_back(Member(71, "GL+10000 RM03", 89, 104, 56, 48, 0, "STZ RUSSIAN pu_uklon 4 TMP 1.2e-005"));
this->members.push_back(Member(72, "GL+10000 RM04", 104, 110, 56, 48, 0, "STZ RUSSIAN pu_uklon 4 TMP 1.2e-005"));
this->members.push_back(Member(73, "GL+10000 RM05", 110, 120, 56, 48, 0, "STZ RUSSIAN pu_uklon 4 TMP 1.2e-005"));
this->members.push_back(Member(74, "GL+10000 RM06", 120, 130, 56, 48, 0, "STZ RUSSIAN pu_uklon 4 TMP 1.2e-005"));
this->members.push_back(Member(75, "GL+10000 RM07", 130, 136, 56, 48, 0, "STZ RUSSIAN pu_uklon 4 TMP 1.2e-005"));
this->members.push_back(Member(76, "GL+10000 RM08", 136, 146, 56, 48, 0, "STZ RUSSIAN pu_uklon 4 TMP 1.2e-005"));
this->members.push_back(Member(77, "GL+15000 B01", 6, 10, 56, 0, 0, "STZ  ASCHM d1 20 TMP 1.2e-005"));
this->members.push_back(Member(78, "GL+15000 B02", 82, 86, 56, 0, 0, "STZ  ASCHM d1 20 TMP 1.2e-005"));
this->members.push_back(Member(79, "GL+15000 B03", 27, 31, 56, 48, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(80, "GL+15000 B04", 31, 33, 56, 0, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(81, "GL+15000 B05", 41, 45, 56, 48, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(82, "GL+15000 B06", 57, 61, 56, 48, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(83, "GL+15000 B07", 61, 63, 56, 0, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(84, "GL+15000 B08", 71, 75, 56, 48, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(85, "GL+15000 B09", 6, 27, 56, 0, 0, "STZ  ASCHM d1 20 TMP 1.2e-005"));
this->members.push_back(Member(86, "GL+15000 B10", 10, 31, 56, 0, 0, "STZ  ASCHM d1 20 TMP 1.2e-005"));
this->members.push_back(Member(87, "GL+15000 B11", 16, 41, 56, 0, 0, "STZ  ASCHM d1 20 TMP 1.2e-005"));
this->members.push_back(Member(88, "GL+15000 B12", 23, 45, 56, 0, 0, "STZ  ASCHM d1 20 TMP 1.2e-005"));
this->members.push_back(Member(89, "GL+15000 B13", 33, 47, 56, 48, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(90, "GL+15000 B14", 37, 49, 56, 48, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(91, "GL+15000 B15", 53, 67, 56, 48, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(92, "GL+15000 B16", 51, 63, 56, 48, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(93, "GL+15000 BR01", 6, 31, 56, 48, 0, "STZ RUSSIAN diam 390 TMP 1.2e-005"));
this->members.push_back(Member(94, "GL+15000 BR02", 23, 41, 56, 48, 0, "STZ RUSSIAN diam 390 TMP 1.2e-005"));
this->members.push_back(Member(95, "GL+15000 BR03", 71, 99, 56, 48, 0, "STZ RUSSIAN diam 390 TMP 1.2e-005"));
this->members.push_back(Member(96, "GL+15000 BR04", 61, 82, 56, 48, 0, "STZ RUSSIAN diam 390 TMP 1.2e-005"));
this->members.push_back(Member(97, "GL+23000 B01", 7, 11, 56, 0, 0, "STZ  ASCHM d1 20 TMP 1.2e-005"));
this->members.push_back(Member(98, "GL+23000 B02", 83, 87, 56, 0, 0, "STZ  ASCHM d1 20 TMP 1.2e-005"));
this->members.push_back(Member(99, "GL+23000 B03", 28, 32, 56, 48, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(100, "GL+23000 B04", 32, 34, 56, 0, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(101, "GL+23000 B05", 42, 46, 56, 48, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(102, "GL+23000 B06", 58, 62, 56, 48, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(103, "GL+23000 B07", 62, 64, 56, 0, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(104, "GL+23000 B08", 72, 76, 56, 48, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(105, "GL+23000 B09", 7, 28, 56, 0, 0, "STZ  ASCHM d1 20 TMP 1.2e-005"));
this->members.push_back(Member(106, "GL+23000 B10", 11, 32, 56, 0, 0, "STZ  ASCHM d1 20 TMP 1.2e-005"));
this->members.push_back(Member(107, "GL+23000 B11", 17, 42, 56, 0, 0, "STZ  ASCHM d1 20 TMP 1.2e-005"));
this->members.push_back(Member(108, "GL+23000 B12", 24, 46, 56, 0, 0, "STZ  ASCHM d1 20 TMP 1.2e-005"));
this->members.push_back(Member(109, "GL+23000 B13", 34, 48, 56, 48, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(110, "GL+23000 B14", 38, 50, 56, 48, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(111, "GL+23000 B15", 54, 68, 56, 48, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(112, "GL+23000 B16", 52, 64, 56, 48, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(113, "GL+15000 BR01", 7, 32, 56, 48, 0, "STZ RUSSIAN diam 390 TMP 1.2e-005"));
this->members.push_back(Member(114, "GL+15000 BR02", 24, 42, 56, 48, 0, "STZ RUSSIAN diam 390 TMP 1.2e-005"));
this->members.push_back(Member(115, "GL+15000 BR03", 72, 100, 56, 48, 0, "STZ RUSSIAN diam 390 TMP 1.2e-005"));
this->members.push_back(Member(116, "GL+15000 BR04", 62, 83, 56, 48, 0, "STZ RUSSIAN diam 390 TMP 1.2e-005"));
this->members.push_back(Member(117, "C01", 19, 20, 0, 0, 90, "STZ  ASCHM d2 7 TMP 1.2e-005"));
this->members.push_back(Member(118, "C02", 95, 96, 0, 0, 90, "STZ  ASCHM d2 7 TMP 1.2e-005"));
this->members.push_back(Member(119, "C03", 123, 124, 0, 0, 90, "STZ  ASCHM d2 3 TMP 1.2e-005"));
this->members.push_back(Member(120, "C04", 149, 150, 0, 0, 90, "STZ  ASCHM d2 3 TMP 1.2e-005"));
this->members.push_back(Member(121, "VB1", 20, 43, 56, 48, 0, "STZ RUSSIAN diam 473 TMP 1.2e-005"));
this->members.push_back(Member(122, "VB2", 21, 44, 56, 48, 0, "STZ RUSSIAN diam 473 TMP 1.2e-005"));
this->members.push_back(Member(123, "VB3", 22, 45, 56, 48, 0, "STZ RUSSIAN diam 516 TMP 1.2e-005"));
this->members.push_back(Member(124, "VB4", 23, 46, 56, 48, 0, "STZ RUSSIAN diam 516 TMP 1.2e-005"));
this->members.push_back(Member(125, "VB5", 96, 73, 56, 48, 0, "STZ RUSSIAN diam 473 TMP 1.2e-005"));
this->members.push_back(Member(126, "VB6", 97, 74, 56, 48, 0, "STZ RUSSIAN diam 473 TMP 1.2e-005"));
this->members.push_back(Member(127, "VB7", 98, 75, 56, 48, 0, "STZ RUSSIAN diam 516 TMP 1.2e-005"));
this->members.push_back(Member(128, "VB8", 99, 76, 56, 48, 0, "STZ RUSSIAN diam 516 TMP 1.2e-005"));
this->members.push_back(Member(129, "C05", 2, 3, 0, 0, 90, "STZ  ASCHM d2 7 TMP 1.2e-005"));
this->members.push_back(Member(130, "C06", 78, 79, 0, 0, 90, "STZ  ASCHM d2 7 TMP 1.2e-005"));
this->members.push_back(Member(131, "C07", 114, 115, 0, 0, 90, "STZ  ASCHM d2 3 TMP 1.2e-005"));
this->members.push_back(Member(132, "C08", 140, 141, 0, 0, 90, "STZ  ASCHM d2 3 TMP 1.2e-005"));
this->members.push_back(Member(133, "VB9", 3, 25, 56, 48, 0, "STZ RUSSIAN diam 473 TMP 1.2e-005"));
this->members.push_back(Member(134, "VB10", 4, 26, 56, 48, 0, "STZ RUSSIAN diam 473 TMP 1.2e-005"));
this->members.push_back(Member(135, "VB11", 5, 27, 56, 48, 0, "STZ RUSSIAN diam 516 TMP 1.2e-005"));
this->members.push_back(Member(136, "VB12", 6, 28, 56, 48, 0, "STZ RUSSIAN diam 516 TMP 1.2e-005"));
this->members.push_back(Member(137, "VB13", 79, 55, 56, 48, 0, "STZ RUSSIAN diam 473 TMP 1.2e-005"));
this->members.push_back(Member(138, "VB14", 80, 56, 56, 48, 0, "STZ RUSSIAN diam 473 TMP 1.2e-005"));
this->members.push_back(Member(139, "VB15", 81, 57, 56, 48, 0, "STZ RUSSIAN diam 516 TMP 1.2e-005"));
this->members.push_back(Member(140, "VB16", 82, 58, 56, 48, 0, "STZ RUSSIAN diam 516 TMP 1.2e-005"));
this->members.push_back(Member(141, "VB17", 3, 8, 56, 48, 0, "STZ RUSSIAN diam 473 TMP 1.2e-005"));
this->members.push_back(Member(142, "VB18", 4, 9, 56, 48, 0, "STZ RUSSIAN diam 473 TMP 1.2e-005"));
this->members.push_back(Member(143, "VB19", 5, 10, 56, 48, 0, "STZ RUSSIAN diam 516 TMP 1.2e-005"));
this->members.push_back(Member(144, "VB20", 6, 11, 56, 48, 0, "STZ RUSSIAN diam 516 TMP 1.2e-005"));
this->members.push_back(Member(145, "VB21", 20, 14, 56, 48, 0, "STZ RUSSIAN diam 473 TMP 1.2e-005"));
this->members.push_back(Member(146, "VB22", 21, 15, 56, 48, 0, "STZ RUSSIAN diam 473 TMP 1.2e-005"));
this->members.push_back(Member(147, "VB23", 22, 16, 56, 48, 0, "STZ RUSSIAN diam 516 TMP 1.2e-005"));
this->members.push_back(Member(148, "VB24", 23, 17, 56, 48, 0, "STZ RUSSIAN diam 516 TMP 1.2e-005"));
this->members.push_back(Member(149, "VB25", 79, 84, 56, 48, 0, "STZ RUSSIAN diam 473 TMP 1.2e-005"));
this->members.push_back(Member(150, "VB26", 80, 85, 56, 48, 0, "STZ RUSSIAN diam 473 TMP 1.2e-005"));
this->members.push_back(Member(151, "VB27", 81, 86, 56, 48, 0, "STZ RUSSIAN diam 516 TMP 1.2e-005"));
this->members.push_back(Member(152, "VB28", 82, 87, 56, 48, 0, "STZ RUSSIAN diam 516 TMP 1.2e-005"));
this->members.push_back(Member(153, "VB29", 96, 90, 56, 48, 0, "STZ RUSSIAN diam 473 TMP 1.2e-005"));
this->members.push_back(Member(154, "VB30", 97, 91, 56, 48, 0, "STZ RUSSIAN diam 473 TMP 1.2e-005"));
this->members.push_back(Member(155, "VB31", 98, 92, 56, 48, 0, "STZ RUSSIAN diam 516 TMP 1.2e-005"));
this->members.push_back(Member(156, "VB32", 99, 93, 56, 48, 0, "STZ RUSSIAN diam 516 TMP 1.2e-005"));
this->members.push_back(Member(157, "VB33", 115, 118, 56, 48, 0, "STZ RUSSIAN diam 473 TMP 1.2e-005"));
this->members.push_back(Member(158, "VB34", 124, 121, 56, 48, 0, "STZ RUSSIAN diam 473 TMP 1.2e-005"));
this->members.push_back(Member(159, "VB35", 141, 144, 56, 48, 0, "STZ RUSSIAN diam 473 TMP 1.2e-005"));
this->members.push_back(Member(160, "VB36", 150, 147, 56, 48, 0, "STZ RUSSIAN diam 473 TMP 1.2e-005"));
this->members.push_back(Member(161, "C01", 18, 19, 0, 0, 90, "S0 3060000 40 60 NU 0.2 RO 2.5 TMP 1.0E-5"));
this->members.push_back(Member(162, "C02", 94, 95, 0, 0, 90, "S0 3060000 40 60 NU 0.2 RO 2.5 TMP 1.0E-5"));
this->members.push_back(Member(163, "C03", 122, 123, 0, 0, 90, "S0 3060000 40 60 NU 0.2 RO 2.5 TMP 1.0E-5"));
this->members.push_back(Member(164, "C04", 148, 149, 0, 0, 90, "S0 3060000 40 60 NU 0.2 RO 2.5 TMP 1.0E-5"));
this->members.push_back(Member(165, "C05", 1, 2, 0, 0, 90, "S0 3060000 40 60 NU 0.2 RO 2.5 TMP 1.0E-5"));
this->members.push_back(Member(166, "C06", 77, 78, 0, 0, 90, "S0 3060000 40 60 NU 0.2 RO 2.5 TMP 1.0E-5"));
this->members.push_back(Member(167, "C07", 113, 114, 0, 0, 90, "S0 3060000 40 60 NU 0.2 RO 2.5 TMP 1.0E-5"));
this->members.push_back(Member(168, "C08", 139, 140, 0, 0, 90, "S0 3060000 40 60 NU 0.2 RO 2.5 TMP 1.0E-5"));
this->members.push_back(Member(169, "C05", 3, 4, 0, 0, 90, "STZ  ASCHM d2 7 TMP 1.2e-005"));
this->members.push_back(Member(170, "C05", 4, 5, 0, 0, 90, "STZ  ASCHM d2 7 TMP 1.2e-005"));
this->members.push_back(Member(171, "C05", 5, 6, 0, 0, 90, "STZ  ASCHM d2 7 TMP 1.2e-005"));
this->members.push_back(Member(172, "C05", 6, 7, 0, 0, 90, "STZ  ASCHM d2 7 TMP 1.2e-005"));
this->members.push_back(Member(173, "GL+6000 B01", 8, 12, 0, 0, 0, "STZ  ASCHM d1 16 TMP 1.2e-005"));
this->members.push_back(Member(174, "GL+10000 B01", 9, 13, 0, 0, 0, "STZ  ASCHM d1 16 TMP 1.2e-005"));
this->members.push_back(Member(175, "GL+15000 B01", 10, 16, 0, 0, 0, "STZ  ASCHM d1 20 TMP 1.2e-005"));
this->members.push_back(Member(176, "GL+23000 B01", 11, 17, 0, 0, 0, "STZ  ASCHM d1 20 TMP 1.2e-005"));
this->members.push_back(Member(177, "GL+6000 B01", 12, 14, 0, 0, 0, "STZ  ASCHM d1 16 TMP 1.2e-005"));
this->members.push_back(Member(178, "GL+10000 B01", 13, 15, 0, 0, 0, "STZ  ASCHM d1 16 TMP 1.2e-005"));
this->members.push_back(Member(179, "GL+6000 B01", 14, 21, 0, 48, 0, "STZ  ASCHM d1 16 TMP 1.2e-005"));
this->members.push_back(Member(180, "GL+10000 B01", 15, 22, 0, 48, 0, "STZ  ASCHM d1 16 TMP 1.2e-005"));
this->members.push_back(Member(181, "GL+15000 B01", 16, 23, 0, 48, 0, "STZ  ASCHM d1 20 TMP 1.2e-005"));
this->members.push_back(Member(182, "GL+23000 B01", 17, 24, 0, 48, 0, "STZ  ASCHM d1 20 TMP 1.2e-005"));
this->members.push_back(Member(183, "C01", 20, 21, 0, 0, 90, "STZ  ASCHM d2 7 TMP 1.2e-005"));
this->members.push_back(Member(184, "C01", 21, 22, 0, 0, 90, "STZ  ASCHM d2 7 TMP 1.2e-005"));
this->members.push_back(Member(185, "C01", 22, 23, 0, 0, 90, "STZ  ASCHM d2 7 TMP 1.2e-005"));
this->members.push_back(Member(186, "C01", 23, 24, 0, 0, 90, "STZ  ASCHM d2 7 TMP 1.2e-005"));
this->members.push_back(Member(187, "GL+6000 B11", 25, 55, 0, 0, 0, "STZ  ASCHM d1 16 TMP 1.2e-005"));
this->members.push_back(Member(188, "GL+10000 B11", 26, 56, 0, 0, 0, "STZ  ASCHM d1 16 TMP 1.2e-005"));
this->members.push_back(Member(189, "GL+15000 B09", 27, 57, 0, 0, 0, "STZ  ASCHM d1 20 TMP 1.2e-005"));
this->members.push_back(Member(190, "GL+23000 B09", 28, 58, 0, 0, 0, "STZ  ASCHM d1 20 TMP 1.2e-005"));
this->members.push_back(Member(191, "GL+6000 B02", 29, 35, 0, 0, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(192, "GL+10000 B02", 30, 36, 0, 0, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(193, "GL+15000 B10", 31, 47, 0, 0, 0, "STZ  ASCHM d1 20 TMP 1.2e-005"));
this->members.push_back(Member(194, "GL+23000 B10", 32, 48, 0, 0, 0, "STZ  ASCHM d1 20 TMP 1.2e-005"));
this->members.push_back(Member(195, "GL+15000 B04", 33, 37, 0, 0, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(196, "GL+23000 B04", 34, 38, 0, 0, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(197, "GL+6000 B02", 35, 39, 0, 0, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(198, "GL+10000 B02", 36, 40, 0, 0, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(199, "GL+15000 B04", 37, 41, 0, 48, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(200, "GL+23000 B04", 38, 42, 0, 48, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(201, "GL+6000 B02", 39, 43, 0, 48, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(202, "GL+10000 B02", 40, 44, 0, 48, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(203, "GL+15000 B11", 41, 49, 0, 0, 0, "STZ  ASCHM d1 20 TMP 1.2e-005"));
this->members.push_back(Member(204, "GL+23000 B11", 42, 50, 0, 0, 0, "STZ  ASCHM d1 20 TMP 1.2e-005"));
this->members.push_back(Member(205, "GL+6000 B14", 43, 73, 0, 0, 0, "STZ  ASCHM d1 16 TMP 1.2e-005"));
this->members.push_back(Member(206, "GL+10000 B14", 44, 74, 0, 0, 0, "STZ  ASCHM d1 16 TMP 1.2e-005"));
this->members.push_back(Member(207, "GL+15000 B12", 45, 75, 0, 0, 0, "STZ  ASCHM d1 20 TMP 1.2e-005"));
this->members.push_back(Member(208, "GL+23000 B12", 46, 76, 0, 0, 0, "STZ  ASCHM d1 20 TMP 1.2e-005"));
this->members.push_back(Member(209, "GL+15000 B10", 47, 51, 0, 0, 0, "STZ  ASCHM d1 20 TMP 1.2e-005"));
this->members.push_back(Member(210, "GL+23000 B10", 48, 52, 0, 0, 0, "STZ  ASCHM d1 20 TMP 1.2e-005"));
this->members.push_back(Member(211, "GL+15000 B11", 49, 53, 0, 0, 0, "STZ  ASCHM d1 20 TMP 1.2e-005"));
this->members.push_back(Member(212, "GL+23000 B11", 50, 54, 0, 0, 0, "STZ  ASCHM d1 20 TMP 1.2e-005"));
this->members.push_back(Member(213, "GL+15000 B10", 51, 61, 0, 0, 0, "STZ  ASCHM d1 20 TMP 1.2e-005"));
this->members.push_back(Member(214, "GL+23000 B10", 52, 62, 0, 0, 0, "STZ  ASCHM d1 20 TMP 1.2e-005"));
this->members.push_back(Member(215, "GL+15000 B11", 53, 71, 0, 0, 0, "STZ  ASCHM d1 20 TMP 1.2e-005"));
this->members.push_back(Member(216, "GL+23000 B11", 54, 72, 0, 0, 0, "STZ  ASCHM d1 20 TMP 1.2e-005"));
this->members.push_back(Member(217, "GL+6000 B11", 55, 80, 0, 48, 0, "STZ  ASCHM d1 16 TMP 1.2e-005"));
this->members.push_back(Member(218, "GL+10000 B11", 56, 81, 0, 48, 0, "STZ  ASCHM d1 16 TMP 1.2e-005"));
this->members.push_back(Member(219, "GL+15000 B09", 57, 82, 0, 48, 0, "STZ  ASCHM d1 20 TMP 1.2e-005"));
this->members.push_back(Member(220, "GL+23000 B09", 58, 83, 0, 48, 0, "STZ  ASCHM d1 20 TMP 1.2e-005"));
this->members.push_back(Member(221, "GL+6000 B03", 59, 65, 0, 0, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(222, "GL+10000 B03", 60, 66, 0, 0, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(223, "GL+15000 B10", 61, 86, 0, 48, 0, "STZ  ASCHM d1 20 TMP 1.2e-005"));
this->members.push_back(Member(224, "GL+23000 B10", 62, 87, 0, 48, 0, "STZ  ASCHM d1 20 TMP 1.2e-005"));
this->members.push_back(Member(225, "GL+15000 B07", 63, 67, 0, 0, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(226, "GL+23000 B07", 64, 68, 0, 0, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(227, "GL+6000 B03", 65, 69, 0, 0, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(228, "GL+10000 B03", 66, 70, 0, 0, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(229, "GL+15000 B07", 67, 71, 0, 48, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(230, "GL+23000 B07", 68, 72, 0, 48, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(231, "GL+6000 B03", 69, 73, 0, 48, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(232, "GL+10000 B03", 70, 74, 0, 48, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(233, "GL+15000 B11", 71, 92, 0, 48, 0, "STZ  ASCHM d1 20 TMP 1.2e-005"));
this->members.push_back(Member(234, "GL+23000 B11", 72, 93, 0, 48, 0, "STZ  ASCHM d1 20 TMP 1.2e-005"));
this->members.push_back(Member(235, "GL+6000 B14", 73, 97, 0, 48, 0, "STZ  ASCHM d1 16 TMP 1.2e-005"));
this->members.push_back(Member(236, "GL+10000 B14", 74, 98, 0, 48, 0, "STZ  ASCHM d1 16 TMP 1.2e-005"));
this->members.push_back(Member(237, "GL+15000 B12", 75, 99, 0, 48, 0, "STZ  ASCHM d1 20 TMP 1.2e-005"));
this->members.push_back(Member(238, "GL+23000 B12", 76, 100, 0, 48, 0, "STZ  ASCHM d1 20 TMP 1.2e-005"));
this->members.push_back(Member(239, "C06", 79, 80, 0, 0, 90, "STZ  ASCHM d2 7 TMP 1.2e-005"));
this->members.push_back(Member(240, "C06", 80, 81, 0, 0, 90, "STZ  ASCHM d2 7 TMP 1.2e-005"));
this->members.push_back(Member(241, "C06", 81, 82, 0, 0, 90, "STZ  ASCHM d2 7 TMP 1.2e-005"));
this->members.push_back(Member(242, "C06", 82, 83, 0, 0, 90, "STZ  ASCHM d2 7 TMP 1.2e-005"));
this->members.push_back(Member(243, "GL+6000 B04", 84, 88, 0, 0, 0, "STZ  ASCHM d1 16 TMP 1.2e-005"));
this->members.push_back(Member(244, "GL+10000 B04", 85, 89, 0, 0, 0, "STZ  ASCHM d1 16 TMP 1.2e-005"));
this->members.push_back(Member(245, "GL+15000 B02", 86, 92, 0, 0, 0, "STZ  ASCHM d1 20 TMP 1.2e-005"));
this->members.push_back(Member(246, "GL+23000 B02", 87, 93, 0, 0, 0, "STZ  ASCHM d1 20 TMP 1.2e-005"));
this->members.push_back(Member(247, "GL+6000 B04", 88, 90, 0, 0, 0, "STZ  ASCHM d1 16 TMP 1.2e-005"));
this->members.push_back(Member(248, "GL+10000 B04", 89, 91, 0, 0, 0, "STZ  ASCHM d1 16 TMP 1.2e-005"));
this->members.push_back(Member(249, "GL+6000 B04", 90, 97, 0, 48, 0, "STZ  ASCHM d1 16 TMP 1.2e-005"));
this->members.push_back(Member(250, "GL+10000 B04", 91, 98, 0, 48, 0, "STZ  ASCHM d1 16 TMP 1.2e-005"));
this->members.push_back(Member(251, "GL+15000 B02", 92, 99, 0, 48, 0, "STZ  ASCHM d1 20 TMP 1.2e-005"));
this->members.push_back(Member(252, "GL+23000 B02", 93, 100, 0, 48, 0, "STZ  ASCHM d1 20 TMP 1.2e-005"));
this->members.push_back(Member(253, "C02", 96, 97, 0, 0, 90, "STZ  ASCHM d2 7 TMP 1.2e-005"));
this->members.push_back(Member(254, "C02", 97, 98, 0, 0, 90, "STZ  ASCHM d2 7 TMP 1.2e-005"));
this->members.push_back(Member(255, "C02", 98, 99, 0, 0, 90, "STZ  ASCHM d2 7 TMP 1.2e-005"));
this->members.push_back(Member(256, "C02", 99, 100, 0, 0, 90, "STZ  ASCHM d2 7 TMP 1.2e-005"));
this->members.push_back(Member(257, "GL+6000 B15", 101, 107, 0, 0, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(258, "GL+10000 B15", 102, 108, 0, 0, 0, "STZ  ASCHM d1 18 TMP 1.2e-005"));
this->members.push_back(Member(259, "GL+6000 B05", 103, 105, 0, 48, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(260, "GL+10000 B05", 104, 106, 0, 48, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(261, "GL+6000 B16", 105, 111, 0, 0, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(262, "GL+10000 B16", 106, 112, 0, 0, 0, "STZ  ASCHM d1 18 TMP 1.2e-005"));
this->members.push_back(Member(263, "GL+6000 B15", 107, 116, 0, 48, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(264, "GL+10000 B15", 108, 117, 0, 48, 0, "STZ  ASCHM d1 18 TMP 1.2e-005"));
this->members.push_back(Member(265, "GL+6000 B06", 109, 111, 0, 48, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(266, "GL+10000 B06", 110, 112, 0, 48, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(267, "GL+6000 B16", 111, 125, 0, 48, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(268, "GL+10000 B16", 112, 126, 0, 48, 0, "STZ  ASCHM d1 18 TMP 1.2e-005"));
this->members.push_back(Member(269, "C07", 115, 116, 0, 0, 90, "STZ  ASCHM d2 3 TMP 1.2e-005"));
this->members.push_back(Member(270, "C07", 116, 117, 0, 0, 90, "STZ  ASCHM d2 3 TMP 1.2e-005"));
this->members.push_back(Member(271, "GL+6000 B07", 118, 119, 0, 0, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(272, "GL+6000 B07", 119, 121, 0, 0, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(273, "GL+10000 B07", 120, 126, 0, 0, 0, "STZ  ASCHM d1 16 TMP 1.2e-005"));
this->members.push_back(Member(274, "GL+6000 B07", 121, 125, 0, 48, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(275, "C03", 124, 125, 0, 0, 90, "STZ  ASCHM d2 3 TMP 1.2e-005"));
this->members.push_back(Member(276, "C03", 125, 126, 0, 0, 90, "STZ  ASCHM d2 3 TMP 1.2e-005"));
this->members.push_back(Member(277, "GL+6000 B17", 127, 133, 0, 0, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(278, "GL+10000 B17", 128, 134, 0, 0, 0, "STZ  ASCHM d1 18 TMP 1.2e-005"));
this->members.push_back(Member(279, "GL+6000 B08", 129, 131, 0, 48, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(280, "GL+10000 B08", 130, 132, 0, 48, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(281, "GL+6000 B18", 131, 137, 0, 0, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(282, "GL+10000 B18", 132, 138, 0, 0, 0, "STZ  ASCHM d1 18 TMP 1.2e-005"));
this->members.push_back(Member(283, "GL+6000 B17", 133, 142, 0, 48, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(284, "GL+10000 B17", 134, 143, 0, 48, 0, "STZ  ASCHM d1 18 TMP 1.2e-005"));
this->members.push_back(Member(285, "GL+6000 B09", 135, 137, 0, 48, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(286, "GL+10000 B09", 136, 138, 0, 48, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(287, "GL+6000 B18", 137, 151, 0, 48, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(288, "GL+10000 B18", 138, 152, 0, 48, 0, "STZ  ASCHM d1 18 TMP 1.2e-005"));
this->members.push_back(Member(289, "C08", 141, 142, 0, 0, 90, "STZ  ASCHM d2 3 TMP 1.2e-005"));
this->members.push_back(Member(290, "C08", 142, 143, 0, 0, 90, "STZ  ASCHM d2 3 TMP 1.2e-005"));
this->members.push_back(Member(291, "GL+6000 B10", 144, 145, 0, 0, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(292, "GL+6000 B10", 145, 147, 0, 0, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(293, "GL+10000 B10", 146, 152, 0, 0, 0, "STZ  ASCHM d1 16 TMP 1.2e-005"));
this->members.push_back(Member(294, "GL+6000 B10", 147, 151, 0, 48, 0, "STZ  ASCHM d1 12 TMP 1.2e-005"));
this->members.push_back(Member(295, "C04", 150, 151, 0, 0, 90, "STZ  ASCHM d2 3 TMP 1.2e-005"));
this->members.push_back(Member(296, "C04", 151, 152, 0, 0, 90, "STZ  ASCHM d2 3 TMP 1.2e-005"));
// +++ RESTRAINTS +++
this->restraints.push_back(Restraint(1, 63));
this->restraints.push_back(Restraint(77, 63));
this->restraints.push_back(Restraint(113, 63));
this->restraints.push_back(Restraint(139, 63));
this->restraints.push_back(Restraint(18, 63));
this->restraints.push_back(Restraint(94, 63));
this->restraints.push_back(Restraint(122, 63));
this->restraints.push_back(Restraint(148, 63));
// +++ LOAD CASES +++
std::vector <double> massMatrixVector;
this->loadCases.push_back(LoadCase(1, "LL", "Type=0  Mode=1  LongTime=1  ReliabilityFactor=1.05" ));
this->loadCases.push_back(LoadCase(2, "WU", "Type=0  Mode=1  LongTime=1  ReliabilityFactor=1.05" ));
this->loadCases.push_back(LoadCase(3, "WO", "Type=0  Mode=1  LongTime=1  ReliabilityFactor=1.05" ));
// +++ LOADS +++
std::vector <double> loadVector;
loadVector.clear();
// Distributed Member Load
loadVector.push_back(2.5);
loadVector.push_back(0);
loadVector.push_back(2.5);
loadVector.push_back(2);
this->loads.push_back(Load(1, 1, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(2.5);
loadVector.push_back(0);
loadVector.push_back(2.5);
loadVector.push_back(1);
this->loads.push_back(Load(1, 173, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(2.5);
loadVector.push_back(0);
loadVector.push_back(2.5);
loadVector.push_back(1);
this->loads.push_back(Load(1, 177, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(2.5);
loadVector.push_back(0);
loadVector.push_back(2.5);
loadVector.push_back(2);
this->loads.push_back(Load(1, 179, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(5);
loadVector.push_back(0.5);
loadVector.push_back(5);
loadVector.push_back(2);
this->loads.push_back(Load(1, 2, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(5);
loadVector.push_back(0);
loadVector.push_back(5);
loadVector.push_back(1);
this->loads.push_back(Load(1, 191, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(5);
loadVector.push_back(0);
loadVector.push_back(5);
loadVector.push_back(1);
this->loads.push_back(Load(1, 197, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(5);
loadVector.push_back(0);
loadVector.push_back(5);
loadVector.push_back(1);
this->loads.push_back(Load(1, 201, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(5);
loadVector.push_back(1);
loadVector.push_back(5);
loadVector.push_back(2);
this->loads.push_back(Load(1, 3, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(5);
loadVector.push_back(0);
loadVector.push_back(5);
loadVector.push_back(1);
this->loads.push_back(Load(1, 221, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(5);
loadVector.push_back(0);
loadVector.push_back(5);
loadVector.push_back(1);
this->loads.push_back(Load(1, 227, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(5);
loadVector.push_back(0);
loadVector.push_back(5);
loadVector.push_back(1.5);
this->loads.push_back(Load(1, 231, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(2.5);
loadVector.push_back(0);
loadVector.push_back(2.5);
loadVector.push_back(2);
this->loads.push_back(Load(1, 4, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(2.5);
loadVector.push_back(0);
loadVector.push_back(2.5);
loadVector.push_back(1);
this->loads.push_back(Load(1, 243, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(2.5);
loadVector.push_back(0);
loadVector.push_back(2.5);
loadVector.push_back(1);
this->loads.push_back(Load(1, 247, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(2.5);
loadVector.push_back(0);
loadVector.push_back(2.5);
loadVector.push_back(2);
this->loads.push_back(Load(1, 249, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(2.5);
loadVector.push_back(0);
loadVector.push_back(2.5);
loadVector.push_back(2);
this->loads.push_back(Load(1, 39, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(2.5);
loadVector.push_back(0);
loadVector.push_back(2.5);
loadVector.push_back(1);
this->loads.push_back(Load(1, 174, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(2.5);
loadVector.push_back(0);
loadVector.push_back(2.5);
loadVector.push_back(1);
this->loads.push_back(Load(1, 178, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(2.5);
loadVector.push_back(0);
loadVector.push_back(2.5);
loadVector.push_back(2);
this->loads.push_back(Load(1, 180, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(5);
loadVector.push_back(0.5);
loadVector.push_back(5);
loadVector.push_back(2);
this->loads.push_back(Load(1, 40, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(5);
loadVector.push_back(0);
loadVector.push_back(5);
loadVector.push_back(1);
this->loads.push_back(Load(1, 192, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(5);
loadVector.push_back(0);
loadVector.push_back(5);
loadVector.push_back(1);
this->loads.push_back(Load(1, 198, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(5);
loadVector.push_back(0);
loadVector.push_back(5);
loadVector.push_back(1);
this->loads.push_back(Load(1, 202, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(5);
loadVector.push_back(1);
loadVector.push_back(5);
loadVector.push_back(2);
this->loads.push_back(Load(1, 41, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(5);
loadVector.push_back(0);
loadVector.push_back(5);
loadVector.push_back(1);
this->loads.push_back(Load(1, 222, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(5);
loadVector.push_back(0);
loadVector.push_back(5);
loadVector.push_back(1);
this->loads.push_back(Load(1, 228, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(5);
loadVector.push_back(0);
loadVector.push_back(5);
loadVector.push_back(1.5);
this->loads.push_back(Load(1, 232, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(2.5);
loadVector.push_back(0);
loadVector.push_back(2.5);
loadVector.push_back(2);
this->loads.push_back(Load(1, 42, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(2.5);
loadVector.push_back(0);
loadVector.push_back(2.5);
loadVector.push_back(1);
this->loads.push_back(Load(1, 244, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(2.5);
loadVector.push_back(0);
loadVector.push_back(2.5);
loadVector.push_back(1);
this->loads.push_back(Load(1, 248, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(2.5);
loadVector.push_back(0);
loadVector.push_back(2.5);
loadVector.push_back(2);
this->loads.push_back(Load(1, 250, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(2.5);
loadVector.push_back(0);
loadVector.push_back(2.5);
loadVector.push_back(2);
this->loads.push_back(Load(1, 77, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(2.5);
loadVector.push_back(0);
loadVector.push_back(2.5);
loadVector.push_back(2);
this->loads.push_back(Load(1, 175, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(2.5);
loadVector.push_back(0);
loadVector.push_back(2.5);
loadVector.push_back(2);
this->loads.push_back(Load(1, 181, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(5);
loadVector.push_back(0.5);
loadVector.push_back(5);
loadVector.push_back(2);
this->loads.push_back(Load(1, 79, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(5);
loadVector.push_back(0);
loadVector.push_back(5);
loadVector.push_back(0.6);
this->loads.push_back(Load(1, 80, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(5);
loadVector.push_back(0);
loadVector.push_back(5);
loadVector.push_back(1);
this->loads.push_back(Load(1, 81, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(5);
loadVector.push_back(0);
loadVector.push_back(5);
loadVector.push_back(0.8);
this->loads.push_back(Load(1, 195, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(5);
loadVector.push_back(0);
loadVector.push_back(5);
loadVector.push_back(0.6);
this->loads.push_back(Load(1, 199, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(5);
loadVector.push_back(1);
loadVector.push_back(5);
loadVector.push_back(2);
this->loads.push_back(Load(1, 82, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(5);
loadVector.push_back(0);
loadVector.push_back(5);
loadVector.push_back(0.6);
this->loads.push_back(Load(1, 83, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(5);
loadVector.push_back(0);
loadVector.push_back(5);
loadVector.push_back(1.5);
this->loads.push_back(Load(1, 84, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(5);
loadVector.push_back(0);
loadVector.push_back(5);
loadVector.push_back(0.8);
this->loads.push_back(Load(1, 225, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(5);
loadVector.push_back(0);
loadVector.push_back(5);
loadVector.push_back(0.6);
this->loads.push_back(Load(1, 229, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(2.5);
loadVector.push_back(0);
loadVector.push_back(2.5);
loadVector.push_back(2);
this->loads.push_back(Load(1, 78, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(2.5);
loadVector.push_back(0);
loadVector.push_back(2.5);
loadVector.push_back(2);
this->loads.push_back(Load(1, 245, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(2.5);
loadVector.push_back(0);
loadVector.push_back(2.5);
loadVector.push_back(2);
this->loads.push_back(Load(1, 251, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(2.5);
loadVector.push_back(0);
loadVector.push_back(2.5);
loadVector.push_back(2);
this->loads.push_back(Load(1, 97, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(2.5);
loadVector.push_back(0);
loadVector.push_back(2.5);
loadVector.push_back(2);
this->loads.push_back(Load(1, 176, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(2.5);
loadVector.push_back(0);
loadVector.push_back(2.5);
loadVector.push_back(2);
this->loads.push_back(Load(1, 182, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(5);
loadVector.push_back(0.5);
loadVector.push_back(5);
loadVector.push_back(2);
this->loads.push_back(Load(1, 99, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(5);
loadVector.push_back(0);
loadVector.push_back(5);
loadVector.push_back(0.6);
this->loads.push_back(Load(1, 100, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(5);
loadVector.push_back(0);
loadVector.push_back(5);
loadVector.push_back(1);
this->loads.push_back(Load(1, 101, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(5);
loadVector.push_back(0);
loadVector.push_back(5);
loadVector.push_back(0.8);
this->loads.push_back(Load(1, 196, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(5);
loadVector.push_back(0);
loadVector.push_back(5);
loadVector.push_back(0.6);
this->loads.push_back(Load(1, 200, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(5);
loadVector.push_back(1);
loadVector.push_back(5);
loadVector.push_back(2);
this->loads.push_back(Load(1, 102, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(5);
loadVector.push_back(0);
loadVector.push_back(5);
loadVector.push_back(0.6);
this->loads.push_back(Load(1, 103, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(5);
loadVector.push_back(0);
loadVector.push_back(5);
loadVector.push_back(1.5);
this->loads.push_back(Load(1, 104, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(5);
loadVector.push_back(0);
loadVector.push_back(5);
loadVector.push_back(0.8);
this->loads.push_back(Load(1, 226, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(5);
loadVector.push_back(0);
loadVector.push_back(5);
loadVector.push_back(0.6);
this->loads.push_back(Load(1, 230, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(2.5);
loadVector.push_back(0);
loadVector.push_back(2.5);
loadVector.push_back(2);
this->loads.push_back(Load(1, 98, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(2.5);
loadVector.push_back(0);
loadVector.push_back(2.5);
loadVector.push_back(2);
this->loads.push_back(Load(1, 246, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(2.5);
loadVector.push_back(0);
loadVector.push_back(2.5);
loadVector.push_back(2);
this->loads.push_back(Load(1, 252, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(4.5);
loadVector.push_back(0);
loadVector.push_back(4.5);
loadVector.push_back(2);
this->loads.push_back(Load(2, 4, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(4.5);
loadVector.push_back(0);
loadVector.push_back(4.5);
loadVector.push_back(1);
this->loads.push_back(Load(2, 243, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(4.5);
loadVector.push_back(0);
loadVector.push_back(4.5);
loadVector.push_back(1);
this->loads.push_back(Load(2, 247, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(4.5);
loadVector.push_back(0);
loadVector.push_back(4.5);
loadVector.push_back(2);
this->loads.push_back(Load(2, 249, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(9);
loadVector.push_back(0);
loadVector.push_back(9);
loadVector.push_back(3);
this->loads.push_back(Load(2, 5, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(9);
loadVector.push_back(0);
loadVector.push_back(9);
loadVector.push_back(3);
this->loads.push_back(Load(2, 259, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(9);
loadVector.push_back(0);
loadVector.push_back(9);
loadVector.push_back(3);
this->loads.push_back(Load(2, 6, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(9);
loadVector.push_back(0);
loadVector.push_back(9);
loadVector.push_back(3);
this->loads.push_back(Load(2, 265, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(9);
loadVector.push_back(0);
loadVector.push_back(9);
loadVector.push_back(2);
this->loads.push_back(Load(2, 7, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(9);
loadVector.push_back(0);
loadVector.push_back(9);
loadVector.push_back(1);
this->loads.push_back(Load(2, 271, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(9);
loadVector.push_back(0);
loadVector.push_back(9);
loadVector.push_back(1);
this->loads.push_back(Load(2, 272, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(9);
loadVector.push_back(0);
loadVector.push_back(9);
loadVector.push_back(2);
this->loads.push_back(Load(2, 274, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(9);
loadVector.push_back(0);
loadVector.push_back(9);
loadVector.push_back(3);
this->loads.push_back(Load(2, 8, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(9);
loadVector.push_back(0);
loadVector.push_back(9);
loadVector.push_back(3);
this->loads.push_back(Load(2, 279, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(9);
loadVector.push_back(0);
loadVector.push_back(9);
loadVector.push_back(3);
this->loads.push_back(Load(2, 9, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(9);
loadVector.push_back(0);
loadVector.push_back(9);
loadVector.push_back(3);
this->loads.push_back(Load(2, 285, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(9);
loadVector.push_back(0);
loadVector.push_back(9);
loadVector.push_back(2);
this->loads.push_back(Load(2, 10, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(9);
loadVector.push_back(0);
loadVector.push_back(9);
loadVector.push_back(1);
this->loads.push_back(Load(2, 291, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(9);
loadVector.push_back(0);
loadVector.push_back(9);
loadVector.push_back(1);
this->loads.push_back(Load(2, 292, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(9);
loadVector.push_back(0);
loadVector.push_back(9);
loadVector.push_back(2);
this->loads.push_back(Load(2, 294, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(4.5);
loadVector.push_back(0);
loadVector.push_back(4.5);
loadVector.push_back(2);
this->loads.push_back(Load(2, 42, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(4.5);
loadVector.push_back(0);
loadVector.push_back(4.5);
loadVector.push_back(1);
this->loads.push_back(Load(2, 244, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(4.5);
loadVector.push_back(0);
loadVector.push_back(4.5);
loadVector.push_back(1);
this->loads.push_back(Load(2, 248, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(4.5);
loadVector.push_back(0);
loadVector.push_back(4.5);
loadVector.push_back(2);
this->loads.push_back(Load(2, 250, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(9);
loadVector.push_back(0);
loadVector.push_back(9);
loadVector.push_back(3);
this->loads.push_back(Load(2, 43, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(9);
loadVector.push_back(0);
loadVector.push_back(9);
loadVector.push_back(3);
this->loads.push_back(Load(2, 260, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(9);
loadVector.push_back(0);
loadVector.push_back(9);
loadVector.push_back(3);
this->loads.push_back(Load(2, 44, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(9);
loadVector.push_back(0);
loadVector.push_back(9);
loadVector.push_back(3);
this->loads.push_back(Load(2, 266, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(9);
loadVector.push_back(0);
loadVector.push_back(9);
loadVector.push_back(3);
this->loads.push_back(Load(2, 45, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(9);
loadVector.push_back(0);
loadVector.push_back(9);
loadVector.push_back(3);
this->loads.push_back(Load(2, 273, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(9);
loadVector.push_back(0);
loadVector.push_back(9);
loadVector.push_back(3);
this->loads.push_back(Load(2, 46, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(9);
loadVector.push_back(0);
loadVector.push_back(9);
loadVector.push_back(3);
this->loads.push_back(Load(2, 280, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(9);
loadVector.push_back(0);
loadVector.push_back(9);
loadVector.push_back(3);
this->loads.push_back(Load(2, 47, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(9);
loadVector.push_back(0);
loadVector.push_back(9);
loadVector.push_back(3);
this->loads.push_back(Load(2, 286, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(9);
loadVector.push_back(0);
loadVector.push_back(9);
loadVector.push_back(3);
this->loads.push_back(Load(2, 48, 17, 3, loadVector));
loadVector.clear();
// Distributed Member Load
loadVector.push_back(9);
loadVector.push_back(0);
loadVector.push_back(9);
loadVector.push_back(3);
this->loads.push_back(Load(2, 293, 17, 3, loadVector));
loadVector.clear();
// Concentrated Member Load
loadVector.push_back(100);
loadVector.push_back(0.42426406871193);
this->loads.push_back(Load(3, 89, 15, 3, loadVector));
loadVector.clear();
// Concentrated Member Load
loadVector.push_back(100);
loadVector.push_back(0.42426406871193);
this->loads.push_back(Load(3, 92, 15, 3, loadVector));
loadVector.clear();
// Concentrated Member Load
loadVector.push_back(100);
loadVector.push_back(0.42426406871193);
this->loads.push_back(Load(3, 90, 15, 3, loadVector));
loadVector.clear();
// Concentrated Member Load
loadVector.push_back(100);
loadVector.push_back(0.42426406871193);
this->loads.push_back(Load(3, 91, 15, 3, loadVector));
loadVector.clear();
// Concentrated Member Load
loadVector.push_back(100);
loadVector.push_back(0.42426406871193);
this->loads.push_back(Load(3, 109, 15, 3, loadVector));
loadVector.clear();
// Concentrated Member Load
loadVector.push_back(100);
loadVector.push_back(0.42426406871193);
this->loads.push_back(Load(3, 112, 15, 3, loadVector));
loadVector.clear();
// Concentrated Member Load
loadVector.push_back(100);
loadVector.push_back(0.42426406871193);
this->loads.push_back(Load(3, 110, 15, 3, loadVector));
loadVector.clear();
// Concentrated Member Load
loadVector.push_back(100);
loadVector.push_back(0.42426406871193);
this->loads.push_back(Load(3, 111, 15, 3, loadVector));
};